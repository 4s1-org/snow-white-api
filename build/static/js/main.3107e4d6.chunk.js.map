{"version":3,"sources":["utils/api.ts","components/common/Card.tsx","components/admin/common/CommonSettings.tsx","components/admin/common/LocationSearch.tsx","components/common/Dialog.tsx","components/admin/common/LocationEdit.tsx","components/admin/common/LocationList.tsx","components/admin/common/CommonArea.tsx","components/admin/date/Settings.tsx","components/admin/date/DateArea.tsx","components/admin/fuelPrice/FuelPriceStationSearch.tsx","components/admin/fuelPrice/FuelPriceStationEdit.tsx","components/admin/fuelPrice/FuelPriceStationList.tsx","components/admin/fuelPrice/FuelPriceSettings.tsx","components/admin/fuelPrice/FuelPriceArea.tsx","components/admin/timetable/StationSearch.tsx","components/admin/timetable/StationEdit.tsx","components/admin/timetable/StationList.tsx","components/admin/timetable/TimetableSettings.tsx","components/admin/timetable/TimetableArea.tsx","components/admin/traffic/Settings.tsx","components/admin/traffic/TrafficArea.tsx","components/admin/weather/Settings.tsx","components/admin/weather/WeatherArea.tsx","components/admin/AdminArea.tsx","components/common/Widget.tsx","components/ui/TrafficWidget.tsx","components/ui/DateWidget.tsx","components/ui/FuelPriceWidget.tsx","components/ui/TimetableWidget.tsx","components/ui/WeatherWidget.tsx","components/ui/UiArea.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Api","path","this","request","data","method","config","baseURL","process","REACT_APP_BACKEND_URL","headers","url","axios","res","Card","className","style","marginBottom","props","title","children","React","Component","CommonSettings","state","morningEnd","morningStart","onMorningStartChange","bind","onMorningEndChange","get","setState","formatTime","type","value","onChange","readOnly","width","date","Date","setHours","setSeconds","hours","getHours","minutes","getMinutes","hoursStr","minutesStr","parts","split","event","currentTarget","a","saveValues","put","parseTime","LocationSearch","searchText","locations","onSearchStart","onSearchTextChange","onSearchTextKeyDown","placeholder","onKeyDown","onClick","icon","faSearch","map","location","key","remoteId","name","onBtnAddClick","faPlus","keyCode","doSearch","preventDefault","doAddLocation","post","onLocationAdd","Dialog","onBtnYesClick","onBtnNoClick","onBtnSaveClick","onBtnOkClick","onBtnAbortClick","display","backgroundColor","tabIndex","role","showBtnYes","showBtnNo","showBtnSave","showBtnOk","showBtnAbort","close","dialogCloseCallback","LocationEdit","nameOrigin","onNameChange","LocationList","showDeleteDialog","showEditDialog","selectedLocation","onDeleteDialogClose","onEditDialogClose","loadData","prevProps","update","id","disabled","onBtnUpClick","faCaretUp","length","onBtnDownClick","faCaretDown","onBtnEditClick","faEdit","onBtnDeleteClick","faTrashAlt","existingLocation","find","x","Object","assign","delete","filter","idx","indexOf","insertAndShift","arr","from","to","cutOut","splice","i","push","sortNo","sort","b","CommonArea","updateLocationList","valueOf","moment","locale","Settings","timer","dto","fontSize","isActive","pattern","preview","onCheckboxIsActiveChange","onTextPatternChange","onSelectFontSizeChange","format","fontSizeOptions","checked","isDisabled","options","option","getOptionLabel","toString","getOptionValue","e","clearTimeout","setTimeout","DateArea","GasStationSearch","stations","onSelectLocationChange","onBtnSearchClick","container","provided","flex","control","base","borderBottomRightRadius","borderRadius","borderTopRightRadius","styles","station","street","houseNumber","postCode","city","doAdd","onStationAdded","coords","latitude","longitude","FuelPriceStationEdit","FuelPriceStationList","selectedStation","onStationChanged","FuelPriceSettings","apiKey","interval","showDiesel","showE10","showE5","onTextApiKeyChange","onCheckboxE5Change","onCheckboxE10Change","onCheckboxDieselChange","onSelectIntervalChange","intervalOptions","label","href","target","rel","FuelPriceArea","updateList","updateSettings","FuelPriceStationSearch","StationSearch","StationEdit","StationList","TimetableSettings","lines","showBus","showIC","showICE","showRB","showRE","showSBahn","showTram","showUBahn","maxChanges","stationFromId","stationToId","onSelectStationFromChange","onSelectStationToChange","onCheckboxICEChange","onCheckboxICChange","onCheckboxREChange","onCheckboxRBChange","onCheckboxSBahnChange","onCheckboxBusChange","onCheckboxTramChange","onCheckboxUBahnChange","TimetableArea","locationFromId","locationToId","onSelectLocationFromChange","onSelectLocationToChange","TrafficArea","locationId","WeatherArea","AdminArea","collapsed","toggleNavbar","classOne","classTwo","data-toggle","data-target","height","alt","activeClassName","component","Widget","footer","TrafficWidget","routes","text","lastUpdate","setInterval","refreshRate","clearInterval","expectedTime","route","streetTypes","join","DateWidget","refresh","FuelPriceWidget","formatPrice","e5","e10","diesel","price","priceStr","replace","part0","substr","part1","TimetableWidget","okDelaySec","trips","trip","tripId","startTimePlanned","startTimeReal","arrivalTimePlanned","arrivalTimeReal","durationPlanned","durationReal","trackPlanned","trackReal","utc","WeatherWidget","infos","info","timestamp","src","Math","round","temperature","temperatureFeelsLike","conditionText","UiArea","fuelPrice","timetable","traffic","weather","document","body","lineHeight","App","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3107e4d6.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig, AxiosResponse } from 'axios'\n\nclass Api {\n  public static get<T>(path: string): Promise<T> {\n    return this.request<T>(path, 'GET')\n  }\n\n  public static post<T>(path: string, data: any): Promise<T> {\n    return this.request<T>(path, 'POST', data)\n  }\n\n  public static put<T>(path: string, data: any): Promise<T> {\n    return this.request<T>(path, 'PUT', data)\n  }\n\n  public static delete<T>(path: string): Promise<T> {\n    return this.request<T>(path, 'DELETE')\n  }\n\n  private static async request<T>(\n    path: string,\n    method: 'GET' | 'PUT' | 'POST' | 'DELETE',\n    data?: any,\n  ): Promise<T> {\n    const config: AxiosRequestConfig = {\n      baseURL: process.env.REACT_APP_BACKEND_URL,\n      data,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method,\n      url: path,\n    }\n    const res: AxiosResponse<T> = await axios.request<T>(config)\n    return res.data\n  }\n}\n\nexport default Api\n","import React from 'react'\n\ninterface IState {\n}\n\ninterface IProps {\n  title: string\n}\n\nclass Card extends React.Component<IProps, IState>  {\n  public render (): JSX.Element {\n    return (\n      <div className='card' style={{\n        marginBottom: '20px'\n      }}>\n        <div className='card-header'>\n          {this.props.title}\n        </div>\n        <div className='card-body'>\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Card\n","import React from \"react\";\nimport Api from \"../../../utils/api\";\nimport { ICommonSettingsDto } from \"@yellowgarbagebag/rest-api-dto\";\nimport Card from \"../../common/Card\";\n\ninterface IState {\n  morningStart: string;\n  morningEnd: string;\n}\n\ninterface IProps {}\n\n// ToDo: In \"Settings\" ohne \"Common\" umbennen\nclass CommonSettings extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      morningEnd: \"00:00\",\n      morningStart: \"00:00\",\n    };\n\n    this.onMorningStartChange = this.onMorningStartChange.bind(this);\n    this.onMorningEndChange = this.onMorningEndChange.bind(this);\n  }\n\n  public async componentDidMount(): Promise<void> {\n    // ToDo: Laden in eigene Funktion\n    const res: ICommonSettingsDto = await Api.get<ICommonSettingsDto>(\n      \"/v1/smartmirror/admin/common/settings\"\n    );\n\n    this.setState({\n      morningEnd: this.formatTime(res.morningEnd),\n      morningStart: this.formatTime(res.morningStart),\n    });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <Card title=\"Allgemeine Einstellungen\">\n        <form>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Vormittag</label>\n            <div className=\"col-sm-8\">\n              <div className=\"form-row\">\n                <div className=\"col\">\n                  <label className=\"col-form-label\">von</label>\n                </div>\n                <div className=\"col\">\n                  <input\n                    className=\"form-control\"\n                    type=\"time\"\n                    value={this.state.morningStart}\n                    onChange={this.onMorningStartChange}\n                  />\n                </div>\n                <div className=\"col\">\n                  <label className=\"col-form-label\">bis</label>\n                </div>\n                <div className=\"col\">\n                  <input\n                    className=\"form-control\"\n                    type=\"time\"\n                    value={this.state.morningEnd}\n                    onChange={this.onMorningEndChange}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Nachmittag</label>\n            <div className=\"col-sm-8\">\n              <div className=\"form-row\">\n                <div className=\"col\">\n                  <label className=\"col-form-label\">von</label>\n                </div>\n                <div className=\"col\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.morningEnd}\n                    readOnly\n                    style={{ width: 100 }}\n                  />\n                </div>\n                <div className=\"col\">\n                  <label className=\"col-form-label\">bis</label>\n                </div>\n                <div className=\"col\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.morningStart}\n                    readOnly\n                    style={{ width: 100 }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Card>\n    );\n  }\n\n  private formatTime(value: number): string {\n    const date: Date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setSeconds(value);\n\n    const hours: number = date.getHours();\n    const minutes: number = date.getMinutes();\n\n    const hoursStr: string = hours < 10 ? `0${hours}` : `${hours}`;\n    const minutesStr: string = minutes < 10 ? `0${minutes}` : `${minutes}`;\n\n    return `${hoursStr}:${minutesStr}`;\n  }\n\n  private parseTime(value: string): number {\n    const parts: Array<string> = value.split(\":\");\n    return +parts[0] * 3600 + +parts[1] * 60;\n  }\n\n  private onMorningStartChange(\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void {\n    this.setState(\n      {\n        morningStart: event.currentTarget.value,\n      },\n      async () => this.saveValues()\n    );\n  }\n\n  private onMorningEndChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        morningEnd: event.currentTarget.value,\n      },\n      async () => this.saveValues()\n    );\n  }\n\n  private async saveValues(): Promise<void> {\n    // ToDo: Delay bei Speicher einbauen\n    await Api.put<ICommonSettingsDto>(\"/v1/smartmirror/admin/common/settings\", {\n      morningEnd: this.parseTime(this.state.morningEnd),\n      morningStart: this.parseTime(this.state.morningStart),\n    });\n  }\n}\n\nexport default CommonSettings;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport Api from \"../../../utils/api\";\nimport { IOpenStreetMapLocationDto } from \"@yellowgarbagebag/rest-api-dto\";\nimport Card from \"../../common/Card\";\n\ninterface IState {\n  searchText: string;\n  locations: Array<IOpenStreetMapLocationDto>;\n}\n\ninterface IProps {\n  onLocationAdd: () => void;\n}\n\nclass LocationSearch extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n      locations: [],\n    };\n\n    // ToDo: onButtonSearchClick\n    this.onSearchStart = this.onSearchStart.bind(this);\n    // ToDo: onTextSearchChange\n    this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    // ToDo: onTextSearchKeyDown\n    this.onSearchTextKeyDown = this.onSearchTextKeyDown.bind(this);\n    // ToDo: onBtnSearchClick\n    this.onSearchStart = this.onSearchStart.bind(this);\n  }\n\n  public render(): JSX.Element {\n    const { locations }: IState = this.state;\n\n    return (\n      <Card title=\"Standorte hinzufügen\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"z.B. Frankfurt am Main, Hauptbahnhof\"\n            value={this.state.searchText}\n            onChange={this.onSearchTextChange}\n            onKeyDown={this.onSearchTextKeyDown}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={this.onSearchStart}\n            >\n              <FontAwesomeIcon icon={faSearch} />\n            </button>\n          </div>\n        </div>\n\n        <table className=\"table\">\n          <tbody>\n            {locations.map((location: IOpenStreetMapLocationDto) => (\n              <tr key={location.remoteId}>\n                <td>{location.name}</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-light\"\n                    onClick={this.onBtnAddClick.bind(this, location)}\n                  >\n                    <FontAwesomeIcon icon={faPlus} />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Card>\n    );\n  }\n\n  private async onSearchTextKeyDown(event: React.KeyboardEvent): Promise<void> {\n    if (event.keyCode === 13) {\n      await this.doSearch();\n    }\n  }\n\n  private onSearchTextChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState({\n      searchText: event.currentTarget.value,\n    });\n  }\n\n  // ToDo: event -> e (auch an den anderen Stellen)\n  // ToDo: Typ von event nochmal prüfen\n  private async onSearchStart(\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): Promise<void> {\n    event.preventDefault();\n    await this.doSearch();\n  }\n\n  private async onBtnAddClick(\n    location: IOpenStreetMapLocationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): Promise<void> {\n    event.preventDefault();\n    await this.doAddLocation(location);\n  }\n\n  private async doAddLocation(\n    location: IOpenStreetMapLocationDto\n  ): Promise<void> {\n    await Api.post<void>(`/v1/smartmirror/admin/common/locations`, location);\n    this.props.onLocationAdd();\n  }\n\n  private async doSearch(): Promise<void> {\n    const res: Array<IOpenStreetMapLocationDto> = await Api.get<\n      Array<IOpenStreetMapLocationDto>\n    >(`/v1/smartmirror/admin/common/locations/search/${this.state.searchText}`);\n    this.setState({\n      locations: res,\n    });\n  }\n}\n\nexport default LocationSearch;\n","import React from 'react'\n\ninterface IState {\n}\n\ninterface IProps {\n  title: string\n  dialogCloseCallback: (name: DialogButtonName) => void\n  showBtnYes?: boolean\n  showBtnNo?: boolean\n  showBtnSave?: boolean\n  showBtnOk?: boolean\n  showBtnAbort?: boolean\n}\n\nclass Dialog extends React.Component<IProps, IState>  {\n  constructor (props: IProps) {\n    super(props)\n\n    this.onBtnYesClick = this.onBtnYesClick.bind(this)\n    this.onBtnNoClick = this.onBtnNoClick.bind(this)\n    this.onBtnSaveClick = this.onBtnSaveClick.bind(this)\n    this.onBtnOkClick = this.onBtnOkClick.bind(this)\n    this.onBtnAbortClick = this.onBtnAbortClick.bind(this)\n  }\n\n  public render (): JSX.Element {\n    return (\n      <div className='modal fade show'\n        style={{\n          display: 'block',\n          backgroundColor: 'rgba(0, 0, 0, 0.5)'\n        }}\n        tabIndex={-1} role='dialog'>\n        <div className='modal-dialog modal-dialog-centered' role='document'>\n          <div className='modal-content'>\n            <div className='modal-header'>\n              <h5 className='modal-title'>{this.props.title}</h5>\n            </div>\n            <div className='modal-body'>\n              {this.props.children}\n            </div>\n            <div className='modal-footer'>\n              {this.props.showBtnYes &&\n                <button key='yes' type='button' className='btn btn-success' onClick={this.onBtnYesClick}>Ja</button>\n              }\n              {this.props.showBtnNo &&\n                <button key='no' type='button' className='btn btn-danger' onClick={this.onBtnNoClick}>Nein</button>\n              }\n              {this.props.showBtnSave &&\n                <button key='save' type='button' className='btn btn-success' onClick={this.onBtnSaveClick}>Speichern</button>\n              }\n              {this.props.showBtnOk &&\n                <button key='abort' type='button' className='btn btn-success' onClick={this.onBtnOkClick}>Ok</button>\n              }\n              {this.props.showBtnAbort &&\n                <button key='abort' type='button' className='btn btn-danger' onClick={this.onBtnAbortClick}>Abbrechen</button>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // ToDo: Eine Funktion für alle Button klicks\n\n  private onBtnYesClick (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n    event.preventDefault()\n    this.close('yes')\n  }\n\n  private onBtnNoClick (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n    event.preventDefault()\n    this.close('no')\n  }\n\n  private onBtnOkClick (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n    event.preventDefault()\n    this.close('ok')\n  }\n\n  private onBtnSaveClick (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n    event.preventDefault()\n    this.close('save')\n  }\n\n  private onBtnAbortClick (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n    event.preventDefault()\n    this.close('abort')\n  }\n\n  private close (name: DialogButtonName): void {\n    this.props.dialogCloseCallback(name)\n  }\n}\n\nexport default Dialog\n","import React from \"react\";\nimport { ICommonLocationDto } from \"@yellowgarbagebag/rest-api-dto\";\n\ninterface IState {\n  name: string;\n  nameOrigin: string;\n}\n\ninterface IProps {\n  location: ICommonLocationDto;\n}\n\nclass LocationEdit extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      name: this.props.location.name,\n      nameOrigin: this.props.location.nameOrigin,\n    };\n\n    this.onNameChange = this.onNameChange.bind(this);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <form>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-4 col-form-label\">Originalname</label>\n          <div className=\"col-sm-8\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.nameOrigin}\n              readOnly\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-4 col-form-label\">Neuer Name</label>\n          <div className=\"col-sm-8\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.name}\n              onChange={this.onNameChange}\n            />\n          </div>\n        </div>\n      </form>\n    );\n  }\n\n  private async onNameChange(\n    event: React.ChangeEvent<HTMLInputElement>\n  ): Promise<void> {\n    this.setState({\n      name: event.currentTarget.value,\n    });\n    this.props.location.name = event.currentTarget.value;\n  }\n}\n\nexport default LocationEdit;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Api from \"../../../utils/api\";\nimport {\n  ICommonLocationDto,\n  ISortOrderDto,\n} from \"@yellowgarbagebag/rest-api-dto\";\nimport {\n  faCaretDown,\n  faCaretUp,\n  faEdit,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Dialog from \"../../common/Dialog\";\nimport LocationEdit from \"./LocationEdit\";\nimport Card from \"../../common/Card\";\n\ninterface IState {\n  locations: ICommonLocationDto[];\n  showDeleteDialog: boolean;\n  showEditDialog: boolean;\n  selectedLocation: ICommonLocationDto | null;\n}\n\ninterface IProps {\n  update: number;\n}\n\nclass LocationList extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      locations: [],\n      showDeleteDialog: false,\n      showEditDialog: false,\n      selectedLocation: null,\n    };\n\n    this.onDeleteDialogClose = this.onDeleteDialogClose.bind(this);\n    this.onEditDialogClose = this.onEditDialogClose.bind(this);\n  }\n\n  public async componentDidMount(): Promise<void> {\n    await this.loadData();\n  }\n\n  public async componentDidUpdate(prevProps: IProps): Promise<void> {\n    if (prevProps.update !== this.props.update) {\n      await this.loadData();\n    }\n  }\n\n  public render(): JSX.Element {\n    const { locations }: IState = this.state;\n\n    return (\n      <div>\n        <Card title=\"Standorte verwalten\">\n          <table className=\"table\">\n            <tbody>\n              {locations.map((location: ICommonLocationDto) => (\n                <tr key={location.id}>\n                  <td className=\"tdtext\">{location.name}</td>\n                  <td className=\"text-right\">\n                    <div className=\"btn-group\" role=\"group\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        disabled={locations[0] === location}\n                        onClick={this.onBtnUpClick.bind(this, location)}\n                      >\n                        <FontAwesomeIcon icon={faCaretUp} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        disabled={locations[locations.length - 1] === location}\n                        onClick={this.onBtnDownClick.bind(this, location)}\n                      >\n                        <FontAwesomeIcon icon={faCaretDown} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        onClick={this.onBtnEditClick.bind(this, location)}\n                      >\n                        <FontAwesomeIcon icon={faEdit} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-danger\"\n                        onClick={this.onBtnDeleteClick.bind(this, location)}\n                      >\n                        <FontAwesomeIcon icon={faTrashAlt} />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </Card>\n        {this.state.showDeleteDialog && (\n          <Dialog\n            title=\"Löschen\"\n            dialogCloseCallback={this.onDeleteDialogClose}\n            showBtnYes={true}\n            showBtnNo={true}\n          >\n            Möchten Sie \"{this.state.selectedLocation!.name}\" wirklich löschen?\n          </Dialog>\n        )}\n        {this.state.showEditDialog && (\n          <Dialog\n            title=\"Bearbeiten\"\n            dialogCloseCallback={this.onEditDialogClose}\n            showBtnSave={true}\n            showBtnAbort={true}\n          >\n            <LocationEdit location={this.state.selectedLocation!} />\n          </Dialog>\n        )}\n      </div>\n    );\n  }\n\n  private async onEditDialogClose(name: DialogButtonName): Promise<void> {\n    if (this.state.selectedLocation && name === \"save\") {\n      const location: ICommonLocationDto = this.state.selectedLocation;\n      await Api.put<void>(\n        `/v1/smartmirror/admin/common/locations/${location.id}`,\n        location\n      );\n\n      const existingLocation: ICommonLocationDto = this.state.locations.find(\n        (x: ICommonLocationDto) => x.id === location.id\n      )!;\n      Object.assign(existingLocation, location);\n\n      this.setState({\n        selectedLocation: null,\n        showEditDialog: false,\n      });\n    } else {\n      this.setState({\n        showEditDialog: false,\n      });\n    }\n  }\n\n  private async onDeleteDialogClose(name: DialogButtonName): Promise<void> {\n    if (this.state.selectedLocation && name === \"yes\") {\n      const location: ICommonLocationDto = this.state.selectedLocation;\n      await Api.delete<void>(\n        `/v1/smartmirror/admin/common/locations/${location.id}`\n      );\n      this.setState({\n        locations: this.state.locations.filter(\n          (x: ICommonLocationDto) => x.id !== location.id\n        ),\n        selectedLocation: null,\n        showDeleteDialog: false,\n      });\n    } else {\n      this.setState({\n        showDeleteDialog: false,\n      });\n    }\n  }\n\n  private async onBtnDeleteClick(\n    location: ICommonLocationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): Promise<void> {\n    event.preventDefault();\n\n    this.setState({\n      selectedLocation: location,\n      showDeleteDialog: true,\n    });\n  }\n\n  private async onBtnEditClick(\n    location: ICommonLocationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): Promise<void> {\n    event.preventDefault();\n\n    this.setState({\n      selectedLocation: Object.assign({}, location),\n      showEditDialog: true,\n    });\n  }\n\n  private async onBtnUpClick(\n    location: ICommonLocationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): Promise<void> {\n    event.preventDefault();\n\n    const idx: number = this.state.locations.indexOf(location);\n    if (idx > 0) {\n      await this.insertAndShift(this.state.locations, idx, idx - 1);\n    }\n  }\n\n  private async onBtnDownClick(\n    location: ICommonLocationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): Promise<void> {\n    event.preventDefault();\n\n    const idx: number = this.state.locations.indexOf(location);\n    if (idx < this.state.locations.length - 1) {\n      await this.insertAndShift(this.state.locations, idx, idx + 1);\n    }\n  }\n\n  private async insertAndShift(\n    arr: ICommonLocationDto[],\n    from: number,\n    to: number\n  ): Promise<void> {\n    const cutOut: ICommonLocationDto = arr.splice(from, 1)[0];\n    arr.splice(to, 0, cutOut);\n\n    this.setState({\n      locations: arr,\n    });\n\n    const data: ISortOrderDto[] = [];\n    for (let i: number = 0; i < arr.length; i++) {\n      data.push({\n        id: arr[i].id,\n        sortNo: i,\n      });\n    }\n    // ToDo: Delay bei Speicher einbauen\n    await Api.put<void>(`/v1/smartmirror/admin/common/locations/reorder`, data);\n  }\n\n  private async loadData(): Promise<void> {\n    const res: ICommonLocationDto[] = await Api.get<ICommonLocationDto[]>(\n      \"/v1/smartmirror/admin/common/locations\"\n    );\n\n    this.setState({\n      locations: res.sort(\n        (a: ICommonLocationDto, b: ICommonLocationDto) => a.sortNo - b.sortNo\n      ),\n    });\n  }\n}\n\nexport default LocationList;\n","import React from 'react'\nimport CommonSettings from './CommonSettings'\nimport LocationSearch from './LocationSearch'\nimport LocationList from './LocationList'\n\ninterface IState {\n  updateLocationList: number\n}\n\ninterface IProps { }\n\nclass CommonArea extends React.Component<IProps, IState>  {\n  constructor(props: IProps) {\n    super(props)\n    this.state = {\n      updateLocationList: 0\n    }\n\n    this.onLocationAdd = this.onLocationAdd.bind(this)\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className='content'>\n        <CommonSettings />\n        <LocationList update={this.state.updateLocationList} />\n        <LocationSearch onLocationAdd={this.onLocationAdd} />\n      </div>\n    )\n  }\n\n  private onLocationAdd(): void {\n    this.setState({\n      updateLocationList: new Date().valueOf()\n    })\n  }\n}\n\nexport default CommonArea\n","import React from \"react\";\nimport Api from \"../../../utils/api\";\nimport Card from \"../../common/Card\";\nimport {\n  ITrafficSettingsDto,\n  IDateSettingsDto,\n} from \"@yellowgarbagebag/rest-api-dto\";\nimport moment from \"moment\";\nimport \"moment/locale/de\";\nimport Select from \"react-select\";\nmoment.locale(\"de\");\n\ninterface IState {\n  dto: IDateSettingsDto;\n  preview: string;\n}\n\ninterface IProps {}\n\nclass Settings extends React.Component<IProps, IState> {\n  private timer: any = null;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      dto: {\n        fontSize: 12,\n        isActive: false,\n        pattern: \"\",\n      },\n      preview: \"\",\n    };\n\n    this.onCheckboxIsActiveChange = this.onCheckboxIsActiveChange.bind(this);\n    this.onTextPatternChange = this.onTextPatternChange.bind(this);\n    this.onSelectFontSizeChange = this.onSelectFontSizeChange.bind(this);\n  }\n\n  public async componentDidMount(): Promise<void> {\n    const dto: IDateSettingsDto = await Api.get<IDateSettingsDto>(\n      \"/v1/smartmirror/admin/date/settings\"\n    );\n\n    this.setState({\n      dto,\n      preview: moment().format(dto.pattern),\n    });\n  }\n\n  public render(): JSX.Element {\n    const fontSizeOptions: Array<{ id: number }> = [];\n    for (let i: number = 8; i <= 28; i += 2) {\n      fontSizeOptions.push({ id: i });\n    }\n\n    return (\n      <Card title=\"Einstellungen\">\n        <form>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Widget aktiv</label>\n            <div className=\"col-sm-8\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={this.state.dto.isActive}\n                  onChange={this.onCheckboxIsActiveChange}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Format</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                disabled={!this.state.dto.isActive}\n                value={this.state.dto.pattern}\n                onChange={this.onTextPatternChange}\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Schriftgröße</label>\n            <div className=\"col-sm-8\">\n              <Select\n                isDisabled={!this.state.dto.isActive}\n                options={fontSizeOptions}\n                onChange={this.onSelectFontSizeChange}\n                value={fontSizeOptions.filter(\n                  (option: { id: number }): boolean =>\n                    option.id === this.state.dto.fontSize\n                )}\n                getOptionLabel={(option: { id: number }): string =>\n                  option.id.toString()\n                }\n                getOptionValue={(option: { id: number }): string =>\n                  option.id.toString()\n                }\n                placeholder={\"Bitte auswählen...\"}\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Vorschau</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                disabled={true}\n                value={this.state.preview}\n              />\n            </div>\n          </div>\n        </form>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Wert</th>\n              <th>Beschreibung</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>DD</td>\n              <td>Tag als Zahl</td>\n            </tr>\n            <tr>\n              <td>MM</td>\n              <td>Monat als Zahl</td>\n            </tr>\n            <tr>\n              <td>MMM</td>\n              <td>Monat als Text (Kurzform)</td>\n            </tr>\n            <tr>\n              <td>MMMM</td>\n              <td>Monat als Text (Langform)</td>\n            </tr>\n            <tr>\n              <td>YY</td>\n              <td>Jahr (zweistellig)</td>\n            </tr>\n            <tr>\n              <td>YYYY</td>\n              <td>Jahr (zweistellig)</td>\n            </tr>\n            <tr>\n              <td>HH</td>\n              <td>Stunden (24-Stunden-Format)</td>\n            </tr>\n            <tr>\n              <td>hh</td>\n              <td>Stunden (12-Stunden-Format)</td>\n            </tr>\n            <tr>\n              <td>mm</td>\n              <td>Minuten</td>\n            </tr>\n            <tr>\n              <td>ss</td>\n              <td>Sekunden</td>\n            </tr>\n            <tr>\n              <td>dd</td>\n              <td>Wochentag (2-stellig)</td>\n            </tr>\n            <tr>\n              <td>ddd</td>\n              <td>Wochentag (3-stellig)</td>\n            </tr>\n            <tr>\n              <td>dddd</td>\n              <td>Wochentag (vollständig)</td>\n            </tr>\n          </tbody>\n        </table>\n      </Card>\n    );\n  }\n\n  private onSelectFontSizeChange(value: any): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          fontSize: value.id,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxIsActiveChange(\n    e: React.ChangeEvent<HTMLInputElement>\n  ): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          isActive: e.currentTarget.checked,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onTextPatternChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          pattern: e.currentTarget.value,\n        },\n        preview: moment().format(e.currentTarget.value),\n      },\n      this.saveValues\n    );\n  }\n\n  private saveValues(): void {\n    clearTimeout(this.timer);\n    this.timer = setTimeout(async () => {\n      await Api.put<ITrafficSettingsDto>(\n        \"/v1/smartmirror/admin/date/settings\",\n        this.state.dto\n      );\n    }, 333);\n  }\n}\n\nexport default Settings;\n","import React from 'react'\nimport Settings from './Settings'\n\ninterface IState { }\n\ninterface IProps { }\n\nclass DateArea extends React.Component<IProps, IState>  {\n  public render (): JSX.Element {\n    return (\n      <div className='content'>\n        <Settings />\n      </div>\n    )\n  }\n}\n\nexport default DateArea\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport Api from \"../../../utils/api\";\nimport {\n  ITankerkoenigStationDto,\n  ICommonLocationDto,\n  ICoordinatesDto,\n} from \"@yellowgarbagebag/rest-api-dto\";\nimport Card from \"../../common/Card\";\nimport Select from \"react-select\";\n\ninterface IState {\n  selectedLocation: ICommonLocationDto | null;\n  stations: Array<ITankerkoenigStationDto>;\n  locations: Array<ICommonLocationDto>;\n}\n\ninterface IProps {\n  onStationAdded: () => void;\n}\n\nclass GasStationSearch extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      locations: [],\n      selectedLocation: null,\n      stations: [],\n    };\n    this.onSelectLocationChange = this.onSelectLocationChange.bind(this);\n    this.onBtnSearchClick = this.onBtnSearchClick.bind(this);\n  }\n\n  public async componentDidMount(): Promise<void> {\n    const locations: Array<ICommonLocationDto> = await Api.get<\n      Array<ICommonLocationDto>\n    >(\"/v1/smartmirror/admin/common/locations\");\n\n    this.setState({\n      locations: locations.sort(\n        (a: ICommonLocationDto, b: ICommonLocationDto): number =>\n          a.sortNo - b.sortNo\n      ),\n    });\n  }\n\n  public render(): JSX.Element {\n    const { stations, locations }: IState = this.state;\n\n    const style: any = {\n      container: (provided: any): any => ({\n        ...provided,\n        flex: 1,\n      }),\n      control: (base: any): any => ({\n        ...base,\n        borderBottomRightRadius: 0,\n        borderRadius: \"0.25rem\",\n        borderTopRightRadius: 0,\n      }),\n    };\n\n    return (\n      <Card title=\"Tankstellen hinzufügen\">\n        <div className=\"input-group mb-3\">\n          <Select\n            styles={style}\n            options={locations}\n            onChange={this.onSelectLocationChange}\n            getOptionLabel={(option: ICommonLocationDto): string => option.name}\n            getOptionValue={(option: ICommonLocationDto): string => option.id}\n            placeholder={\"Bitte auswählen...\"}\n          />\n\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={this.onBtnSearchClick}\n            >\n              <FontAwesomeIcon icon={faSearch} />\n            </button>\n          </div>\n        </div>\n\n        <table className=\"table\">\n          <tbody>\n            {stations.map((station: ITankerkoenigStationDto) => (\n              <tr key={station.remoteId}>\n                <td>\n                  {station.name}\n                  <br />\n                  {station.street} {station.houseNumber}\n                  <br />\n                  {station.postCode} {station.city}\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-light\"\n                    onClick={this.onBtnAddClick.bind(this, station)}\n                  >\n                    <FontAwesomeIcon icon={faPlus} />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Card>\n    );\n  }\n\n  private onSelectLocationChange(value: any): void {\n    this.setState({\n      selectedLocation: value,\n    });\n  }\n\n  // ToDo: Typ von event nochmal prüfen\n  private async onBtnSearchClick(\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): Promise<void> {\n    e.preventDefault();\n    await this.doSearch();\n  }\n\n  private async onBtnAddClick(\n    location: ITankerkoenigStationDto,\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): Promise<void> {\n    e.preventDefault();\n    await this.doAdd(location);\n  }\n\n  private async doAdd(location: ITankerkoenigStationDto): Promise<void> {\n    await Api.post<void>(`/v1/smartmirror/admin/fuelprice/stations`, location);\n    this.props.onStationAdded();\n  }\n\n  private async doSearch(): Promise<void> {\n    if (this.state.selectedLocation) {\n      const coords: ICoordinatesDto = {\n        latitude: this.state.selectedLocation.latitude,\n        longitude: this.state.selectedLocation.longitude,\n      };\n\n      const res: Array<ITankerkoenigStationDto> = await Api.post<\n        Array<ITankerkoenigStationDto>\n      >(`/v1/smartmirror/admin/fuelprice/stations/search`, coords);\n      this.setState({\n        stations: res,\n      });\n    }\n  }\n}\n\nexport default GasStationSearch;\n","import React from \"react\";\nimport { IFuelPriceStationDto } from \"@yellowgarbagebag/rest-api-dto\";\n\ninterface IState {\n  name: string;\n  nameOrigin: string;\n}\n\ninterface IProps {\n  station: IFuelPriceStationDto;\n}\n\nclass FuelPriceStationEdit extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      name: this.props.station.name,\n      nameOrigin: this.props.station.nameOrigin,\n    };\n\n    this.onNameChange = this.onNameChange.bind(this);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <form>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-4 col-form-label\">Originalname</label>\n          <div className=\"col-sm-8\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.nameOrigin}\n              readOnly\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-4 col-form-label\">Neuer Name</label>\n          <div className=\"col-sm-8\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.name}\n              onChange={this.onNameChange}\n            />\n          </div>\n        </div>\n      </form>\n    );\n  }\n\n  private onNameChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState({\n      name: event.currentTarget.value,\n    });\n    this.props.station.name = event.currentTarget.value;\n  }\n}\n\nexport default FuelPriceStationEdit;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Api from \"../../../utils/api\";\nimport {\n  ISortOrderDto,\n  IFuelPriceStationDto,\n} from \"@yellowgarbagebag/rest-api-dto\";\nimport {\n  faCaretDown,\n  faCaretUp,\n  faEdit,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Dialog from \"../../common/Dialog\";\nimport Card from \"../../common/Card\";\nimport FuelPriceStationEdit from \"./FuelPriceStationEdit\";\n\ninterface IState {\n  stations: Array<IFuelPriceStationDto>;\n  showDeleteDialog: boolean;\n  showEditDialog: boolean;\n  selectedStation: IFuelPriceStationDto | null;\n}\n\ninterface IProps {\n  update: number;\n  onStationChanged: () => void;\n}\n\nclass FuelPriceStationList extends React.Component<IProps, IState> {\n  private timer: any = null;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      selectedStation: null,\n      showDeleteDialog: false,\n      showEditDialog: false,\n      stations: [],\n    };\n\n    this.onDeleteDialogClose = this.onDeleteDialogClose.bind(this);\n    this.onEditDialogClose = this.onEditDialogClose.bind(this);\n  }\n\n  public async componentDidMount(): Promise<void> {\n    await this.loadData();\n  }\n\n  public async componentDidUpdate(prevProps: IProps): Promise<void> {\n    if (prevProps.update !== this.props.update) {\n      await this.loadData();\n    }\n  }\n\n  public render(): JSX.Element {\n    const { stations }: IState = this.state;\n\n    return (\n      <div>\n        <Card title=\"Tankstellen verwalten\">\n          <table className=\"table\">\n            <tbody>\n              {stations.map((station: IFuelPriceStationDto) => (\n                <tr key={station.id}>\n                  <td className=\"tdtext\">{station.name}</td>\n                  <td className=\"text-right\">\n                    <div className=\"btn-group\" role=\"group\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        disabled={stations[0] === station}\n                        onClick={this.onBtnUpClick.bind(this, station)}\n                      >\n                        <FontAwesomeIcon icon={faCaretUp} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        disabled={stations[stations.length - 1] === station}\n                        onClick={this.onBtnDownClick.bind(this, station)}\n                      >\n                        <FontAwesomeIcon icon={faCaretDown} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        onClick={this.onBtnEditClick.bind(this, station)}\n                      >\n                        <FontAwesomeIcon icon={faEdit} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-danger\"\n                        onClick={this.onBtnDeleteClick.bind(this, station)}\n                      >\n                        <FontAwesomeIcon icon={faTrashAlt} />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </Card>\n        {this.state.showDeleteDialog && (\n          <Dialog\n            title=\"Löschen\"\n            dialogCloseCallback={this.onDeleteDialogClose}\n            showBtnYes={true}\n            showBtnNo={true}\n          >\n            Möchten Sie \"{this.state.selectedStation!.name}\" wirklich löschen?\n          </Dialog>\n        )}\n        {this.state.showEditDialog && (\n          <Dialog\n            title=\"Bearbeiten\"\n            dialogCloseCallback={this.onEditDialogClose}\n            showBtnSave={true}\n            showBtnAbort={true}\n          >\n            <FuelPriceStationEdit station={this.state.selectedStation!} />\n          </Dialog>\n        )}\n      </div>\n    );\n  }\n\n  private async onEditDialogClose(name: DialogButtonName): Promise<void> {\n    if (this.state.selectedStation && name === \"save\") {\n      const station: IFuelPriceStationDto = this.state.selectedStation;\n      await Api.put<void>(\n        `/v1/smartmirror/admin/fuelprice/stations/${station.id}`,\n        station\n      );\n\n      const existingLocation: IFuelPriceStationDto = this.state.stations.find(\n        (x: IFuelPriceStationDto) => x.id === station.id\n      )!;\n      Object.assign(existingLocation, station);\n\n      this.setState({\n        selectedStation: null,\n        showEditDialog: false,\n      });\n\n      this.props.onStationChanged();\n    } else {\n      this.setState({\n        showEditDialog: false,\n      });\n    }\n  }\n\n  private async onDeleteDialogClose(name: DialogButtonName): Promise<void> {\n    if (this.state.selectedStation && name === \"yes\") {\n      const station: IFuelPriceStationDto = this.state.selectedStation;\n      await Api.delete<void>(\n        `/v1/smartmirror/admin/fuelprice/stations/${station.id}`\n      );\n\n      this.setState({\n        selectedStation: null,\n        showDeleteDialog: false,\n        stations: this.state.stations.filter(\n          (x: IFuelPriceStationDto) => x.id !== station.id\n        ),\n      });\n\n      this.props.onStationChanged();\n    } else {\n      this.setState({\n        showDeleteDialog: false,\n      });\n    }\n  }\n\n  private onBtnDeleteClick(\n    station: IFuelPriceStationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void {\n    event.preventDefault();\n\n    this.setState({\n      selectedStation: station,\n      showDeleteDialog: true,\n    });\n  }\n\n  private onBtnEditClick(\n    station: IFuelPriceStationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void {\n    event.preventDefault();\n\n    this.setState({\n      selectedStation: Object.assign({}, station),\n      showEditDialog: true,\n    });\n  }\n\n  private onBtnUpClick(\n    station: IFuelPriceStationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void {\n    event.preventDefault();\n\n    const idx: number = this.state.stations.indexOf(station);\n    if (idx > 0) {\n      this.insertAndShift(this.state.stations, idx, idx - 1);\n    }\n  }\n\n  private onBtnDownClick(\n    station: IFuelPriceStationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void {\n    event.preventDefault();\n\n    const idx: number = this.state.stations.indexOf(station);\n    if (idx < this.state.stations.length - 1) {\n      this.insertAndShift(this.state.stations, idx, idx + 1);\n    }\n  }\n\n  private insertAndShift(\n    arr: Array<IFuelPriceStationDto>,\n    from: number,\n    to: number\n  ): void {\n    const cutOut: IFuelPriceStationDto = arr.splice(from, 1)[0];\n    arr.splice(to, 0, cutOut);\n\n    this.setState({\n      stations: arr,\n    });\n\n    const data: Array<ISortOrderDto> = [];\n    for (let i: number = 0; i < arr.length; i++) {\n      data.push({\n        id: arr[i].id,\n        sortNo: i,\n      });\n    }\n\n    clearTimeout(this.timer);\n    this.timer = setTimeout(async () => {\n      await Api.put<void>(\n        \"/v1/smartmirror/admin/fuelprice/stations/reorder\",\n        data\n      );\n    }, 500);\n  }\n\n  private async loadData(): Promise<void> {\n    const res: Array<IFuelPriceStationDto> = await Api.get<\n      Array<IFuelPriceStationDto>\n    >(\"/v1/smartmirror/admin/fuelprice/stations\");\n\n    this.setState({\n      stations: res.sort(\n        (a: IFuelPriceStationDto, b: IFuelPriceStationDto) =>\n          a.sortNo - b.sortNo\n      ),\n    });\n  }\n}\n\nexport default FuelPriceStationList;\n","import React from \"react\";\nimport Api from \"../../../utils/api\";\nimport Card from \"../../common/Card\";\nimport {\n  IFuelPriceSettingsDto,\n  IFuelPriceStationDto,\n} from \"@yellowgarbagebag/rest-api-dto\";\nimport Select from \"react-select\";\n\ninterface IState {\n  dto: IFuelPriceSettingsDto;\n  stations: Array<IFuelPriceStationDto>;\n}\n\ninterface IProps {\n  update: number;\n}\n\nclass FuelPriceSettings extends React.Component<IProps, IState> {\n  private timer: any = null;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      dto: {\n        apiKey: \"\",\n        interval: 15,\n        isActive: false,\n        showDiesel: false,\n        showE10: false,\n        showE5: false,\n      },\n      stations: [],\n    };\n\n    this.onCheckboxIsActiveChange = this.onCheckboxIsActiveChange.bind(this);\n    this.onTextApiKeyChange = this.onTextApiKeyChange.bind(this);\n    this.onCheckboxE5Change = this.onCheckboxE5Change.bind(this);\n    this.onCheckboxE10Change = this.onCheckboxE10Change.bind(this);\n    this.onCheckboxDieselChange = this.onCheckboxDieselChange.bind(this);\n    this.onSelectIntervalChange = this.onSelectIntervalChange.bind(this);\n  }\n\n  public async componentDidMount(): Promise<void> {\n    await this.loadData();\n  }\n\n  public async componentDidUpdate(prevProps: IProps): Promise<void> {\n    if (prevProps.update !== this.props.update) {\n      await this.loadData();\n    }\n  }\n\n  public render(): JSX.Element {\n    const intervalOptions: Array<{ value: number; label: string }> = [\n      {\n        label: \"15 Minuten\",\n        value: 15 * 3600,\n      },\n      {\n        label: \"30 Minuten\",\n        value: 30 * 3600,\n      },\n      {\n        label: \"60 Minuten\",\n        value: 60 * 3600,\n      },\n    ];\n\n    return (\n      <Card title=\"Einstellungen\">\n        <form>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Widget aktiv</label>\n            <div className=\"col-sm-8\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={this.state.dto.isActive}\n                  onChange={this.onCheckboxIsActiveChange}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">API-Key</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                disabled={!this.state.dto.isActive}\n                value={this.state.dto.apiKey}\n                onChange={this.onTextApiKeyChange}\n              />\n              <div className=\"text-right\">\n                <a\n                  href=\"https://creativecommons.tankerkoenig.de/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  API-Key beantragen\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Abfrageintervall</label>\n            <div className=\"col-sm-8\">\n              <Select\n                isDisabled={!this.state.dto.isActive}\n                options={intervalOptions}\n                onChange={this.onSelectIntervalChange}\n                value={intervalOptions.filter(\n                  (option: { value: number; label: string }): boolean =>\n                    option.value === this.state.dto.interval\n                )}\n                getOptionLabel={(option: {\n                  value: number;\n                  label: string;\n                }): string => option.label}\n                getOptionValue={(option: {\n                  value: number;\n                  label: string;\n                }): string => option.value.toString()}\n                placeholder={\"Bitte auswählen...\"}\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Kraftstoffsorten</label>\n            <div className=\"col-sm-8\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  disabled={!this.state.dto.isActive}\n                  checked={this.state.dto.showE5}\n                  onChange={this.onCheckboxE5Change}\n                />\n                <label className=\"form-check-label\">E5</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  disabled={!this.state.dto.isActive}\n                  checked={this.state.dto.showE10}\n                  onChange={this.onCheckboxE10Change}\n                />\n                <label className=\"form-check-label\">E10</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  disabled={!this.state.dto.isActive}\n                  checked={this.state.dto.showDiesel}\n                  onChange={this.onCheckboxDieselChange}\n                />\n                <label className=\"form-check-label\">Diesel</label>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Card>\n    );\n  }\n\n  private async loadData(): Promise<void> {\n    const stations: Array<IFuelPriceStationDto> = await Api.get<\n      Array<IFuelPriceStationDto>\n    >(\"/v1/smartmirror/admin/fuelprice/stations\");\n    const dto: IFuelPriceSettingsDto = await Api.get<IFuelPriceSettingsDto>(\n      \"/v1/smartmirror/admin/fuelprice/settings\"\n    );\n    this.setState({\n      dto,\n      stations,\n    });\n  }\n\n  private onSelectIntervalChange(value: any): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          interval: value.value,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxIsActiveChange(\n    e: React.ChangeEvent<HTMLInputElement>\n  ): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          isActive: e.currentTarget.checked,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxE5Change(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          showE5: e.currentTarget.checked,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxE10Change(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          showE10: e.currentTarget.checked,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxDieselChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          showDiesel: e.currentTarget.checked,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onTextApiKeyChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          apiKey: e.currentTarget.value,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private saveValues(): void {\n    clearTimeout(this.timer);\n    this.timer = setTimeout(async () => {\n      await Api.put<IFuelPriceSettingsDto>(\n        \"/v1/smartmirror/admin/fuelprice/settings\",\n        this.state.dto\n      );\n    }, 333);\n  }\n}\n\nexport default FuelPriceSettings;\n","import React from 'react'\nimport FuelPriceStationSearch from './FuelPriceStationSearch'\nimport FuelPriceStationList from './FuelPriceStationList'\nimport FuelPriceSettings from './FuelPriceSettings'\n\ninterface IState {\n  updateList: number\n  updateSettings: number\n}\n\ninterface IProps { }\n\nclass FuelPriceArea extends React.Component<IProps, IState>  {\n  constructor (props: IProps) {\n    super(props)\n    this.state = {\n      updateList: 0,\n      updateSettings: 0\n    }\n\n    this.onStationAdded = this.onStationAdded.bind(this)\n    this.onStationChanged = this.onStationChanged.bind(this)\n  }\n\n  public render (): JSX.Element {\n    return (\n      <div className='content'>\n        <FuelPriceSettings update={this.state.updateSettings} />\n        <FuelPriceStationList update={this.state.updateList} onStationChanged={this.onStationChanged} />\n        <FuelPriceStationSearch onStationAdded={this.onStationAdded} />\n      </div>\n    )\n  }\n\n  private onStationAdded (): void {\n    this.setState({\n      updateList: new Date().valueOf(),\n      updateSettings: new Date().valueOf()\n    })\n  }\n\n  private onStationChanged (): void {\n    this.setState({\n      updateSettings: new Date().valueOf()\n    })\n  }\n}\n\nexport default FuelPriceArea\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport Api from \"../../../utils/api\";\nimport {\n  IRmvStationDto,\n  ICommonLocationDto,\n  ICoordinatesDto,\n} from \"@yellowgarbagebag/rest-api-dto\";\nimport Card from \"../../common/Card\";\nimport Select from \"react-select\";\n\ninterface IState {\n  selectedLocation: ICommonLocationDto | null;\n  stations: Array<IRmvStationDto>;\n  locations: Array<ICommonLocationDto>;\n}\n\ninterface IProps {\n  onStationAdded: () => void;\n}\n\nclass StationSearch extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      locations: [],\n      selectedLocation: null,\n      stations: [],\n    };\n    this.onSelectLocationChange = this.onSelectLocationChange.bind(this);\n    this.onBtnSearchClick = this.onBtnSearchClick.bind(this);\n  }\n\n  public async componentDidMount(): Promise<void> {\n    const locations: Array<ICommonLocationDto> = await Api.get<\n      Array<ICommonLocationDto>\n    >(\"/v1/smartmirror/admin/common/locations\");\n\n    this.setState({\n      locations: locations.sort(\n        (a: ICommonLocationDto, b: ICommonLocationDto): number =>\n          a.sortNo - b.sortNo\n      ),\n    });\n  }\n\n  public render(): JSX.Element {\n    const { stations, locations }: IState = this.state;\n\n    const style: any = {\n      container: (provided: any): any => ({\n        ...provided,\n        flex: 1,\n      }),\n      control: (base: any): any => ({\n        ...base,\n        borderBottomRightRadius: 0,\n        borderRadius: \"0.25rem\",\n        borderTopRightRadius: 0,\n      }),\n    };\n\n    return (\n      <Card title=\"Haltestellen hinzufügen\">\n        <div className=\"input-group mb-3\">\n          <Select\n            styles={style}\n            options={locations}\n            onChange={this.onSelectLocationChange}\n            getOptionLabel={(option: ICommonLocationDto): string => option.name}\n            getOptionValue={(option: ICommonLocationDto): string => option.id}\n            placeholder={\"Bitte auswählen...\"}\n          />\n\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={this.onBtnSearchClick}\n            >\n              <FontAwesomeIcon icon={faSearch} />\n            </button>\n          </div>\n        </div>\n\n        <table className=\"table\">\n          <tbody>\n            {stations.map((station: IRmvStationDto) => (\n              <tr key={station.remoteId}>\n                <td>{station.name}</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-light\"\n                    onClick={this.onBtnAddClick.bind(this, station)}\n                  >\n                    <FontAwesomeIcon icon={faPlus} />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Card>\n    );\n  }\n\n  private onSelectLocationChange(value: any): void {\n    this.setState({\n      selectedLocation: value,\n    });\n  }\n\n  // ToDo: Typ von event nochmal prüfen\n  private async onBtnSearchClick(\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): Promise<void> {\n    e.preventDefault();\n    await this.doSearch();\n  }\n\n  private async onBtnAddClick(\n    location: IRmvStationDto,\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): Promise<void> {\n    e.preventDefault();\n    await this.doAdd(location);\n  }\n\n  private async doAdd(location: IRmvStationDto): Promise<void> {\n    await Api.post<void>(`/v1/smartmirror/admin/timetable/stations`, location);\n    this.props.onStationAdded();\n  }\n\n  private async doSearch(): Promise<void> {\n    if (this.state.selectedLocation) {\n      const coords: ICoordinatesDto = {\n        latitude: this.state.selectedLocation.latitude,\n        longitude: this.state.selectedLocation.longitude,\n      };\n\n      const res: Array<IRmvStationDto> = await Api.post<Array<IRmvStationDto>>(\n        `/v1/smartmirror/admin/timetable/stations/search/`,\n        coords\n      );\n      this.setState({\n        stations: res,\n      });\n    }\n  }\n}\n\nexport default StationSearch;\n","import React from \"react\";\nimport { ITimetableStationDto } from \"@yellowgarbagebag/rest-api-dto\";\n\ninterface IState {\n  name: string;\n  nameOrigin: string;\n}\n\ninterface IProps {\n  station: ITimetableStationDto;\n}\n\nclass StationEdit extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      name: this.props.station.name,\n      nameOrigin: this.props.station.nameOrigin,\n    };\n\n    this.onNameChange = this.onNameChange.bind(this);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <form>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-4 col-form-label\">Originalname</label>\n          <div className=\"col-sm-8\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.nameOrigin}\n              readOnly\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-4 col-form-label\">Neuer Name</label>\n          <div className=\"col-sm-8\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.name}\n              onChange={this.onNameChange}\n            />\n          </div>\n        </div>\n      </form>\n    );\n  }\n\n  private onNameChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState({\n      name: event.currentTarget.value,\n    });\n    this.props.station.name = event.currentTarget.value;\n  }\n}\n\nexport default StationEdit;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Api from \"../../../utils/api\";\nimport {\n  ISortOrderDto,\n  ITimetableStationDto,\n} from \"@yellowgarbagebag/rest-api-dto\";\nimport {\n  faCaretDown,\n  faCaretUp,\n  faEdit,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Dialog from \"../../common/Dialog\";\nimport Card from \"../../common/Card\";\nimport StationEdit from \"./StationEdit\";\n\ninterface IState {\n  stations: Array<ITimetableStationDto>;\n  showDeleteDialog: boolean;\n  showEditDialog: boolean;\n  selectedStation: ITimetableStationDto | null;\n}\n\ninterface IProps {\n  update: number;\n  onStationChanged: () => void;\n}\n\nclass StationList extends React.Component<IProps, IState> {\n  private timer: any = null;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      selectedStation: null,\n      showDeleteDialog: false,\n      showEditDialog: false,\n      stations: [],\n    };\n\n    this.onDeleteDialogClose = this.onDeleteDialogClose.bind(this);\n    this.onEditDialogClose = this.onEditDialogClose.bind(this);\n  }\n\n  public async componentDidMount(): Promise<void> {\n    await this.loadData();\n  }\n\n  public async componentDidUpdate(prevProps: IProps): Promise<void> {\n    if (prevProps.update !== this.props.update) {\n      await this.loadData();\n    }\n  }\n\n  public render(): JSX.Element {\n    const { stations }: IState = this.state;\n\n    return (\n      <div>\n        <Card title=\"Haltestellen verwalten\">\n          <table className=\"table\">\n            <tbody>\n              {stations.map((station: ITimetableStationDto) => (\n                <tr key={station.id}>\n                  <td className=\"tdtext\">{station.name}</td>\n                  <td className=\"text-right\">\n                    <div className=\"btn-group\" role=\"group\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        disabled={stations[0] === station}\n                        onClick={this.onBtnUpClick.bind(this, station)}\n                      >\n                        <FontAwesomeIcon icon={faCaretUp} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        disabled={stations[stations.length - 1] === station}\n                        onClick={this.onBtnDownClick.bind(this, station)}\n                      >\n                        <FontAwesomeIcon icon={faCaretDown} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        onClick={this.onBtnEditClick.bind(this, station)}\n                      >\n                        <FontAwesomeIcon icon={faEdit} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-danger\"\n                        onClick={this.onBtnDeleteClick.bind(this, station)}\n                      >\n                        <FontAwesomeIcon icon={faTrashAlt} />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </Card>\n        {this.state.showDeleteDialog && (\n          <Dialog\n            title=\"Löschen\"\n            dialogCloseCallback={this.onDeleteDialogClose}\n            showBtnYes={true}\n            showBtnNo={true}\n          >\n            Möchten Sie \"{this.state.selectedStation!.name}\" wirklich löschen?\n          </Dialog>\n        )}\n        {this.state.showEditDialog && (\n          <Dialog\n            title=\"Bearbeiten\"\n            dialogCloseCallback={this.onEditDialogClose}\n            showBtnSave={true}\n            showBtnAbort={true}\n          >\n            <StationEdit station={this.state.selectedStation!} />\n          </Dialog>\n        )}\n      </div>\n    );\n  }\n\n  private async onEditDialogClose(name: DialogButtonName): Promise<void> {\n    if (this.state.selectedStation && name === \"save\") {\n      const station: ITimetableStationDto = this.state.selectedStation;\n      await Api.put<void>(\n        `/v1/smartmirror/admin/timetable/stations/${station.id}`,\n        station\n      );\n\n      const existingLocation: ITimetableStationDto = this.state.stations.find(\n        (x: ITimetableStationDto) => x.id === station.id\n      )!;\n      Object.assign(existingLocation, station);\n\n      this.setState({\n        selectedStation: null,\n        showEditDialog: false,\n      });\n\n      this.props.onStationChanged();\n    } else {\n      this.setState({\n        showEditDialog: false,\n      });\n    }\n  }\n\n  private async onDeleteDialogClose(name: DialogButtonName): Promise<void> {\n    if (this.state.selectedStation && name === \"yes\") {\n      const station: ITimetableStationDto = this.state.selectedStation;\n      await Api.delete<void>(\n        `/v1/smartmirror/admin/timetable/stations/${station.id}`\n      );\n\n      this.setState({\n        selectedStation: null,\n        showDeleteDialog: false,\n        stations: this.state.stations.filter(\n          (x: ITimetableStationDto) => x.id !== station.id\n        ),\n      });\n\n      this.props.onStationChanged();\n    } else {\n      this.setState({\n        showDeleteDialog: false,\n      });\n    }\n  }\n\n  private onBtnDeleteClick(\n    station: ITimetableStationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void {\n    event.preventDefault();\n\n    this.setState({\n      selectedStation: station,\n      showDeleteDialog: true,\n    });\n  }\n\n  private onBtnEditClick(\n    station: ITimetableStationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void {\n    event.preventDefault();\n\n    this.setState({\n      selectedStation: Object.assign({}, station),\n      showEditDialog: true,\n    });\n  }\n\n  private onBtnUpClick(\n    station: ITimetableStationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void {\n    event.preventDefault();\n\n    const idx: number = this.state.stations.indexOf(station);\n    if (idx > 0) {\n      this.insertAndShift(this.state.stations, idx, idx - 1);\n    }\n  }\n\n  private onBtnDownClick(\n    station: ITimetableStationDto,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void {\n    event.preventDefault();\n\n    const idx: number = this.state.stations.indexOf(station);\n    if (idx < this.state.stations.length - 1) {\n      this.insertAndShift(this.state.stations, idx, idx + 1);\n    }\n  }\n\n  private insertAndShift(\n    arr: Array<ITimetableStationDto>,\n    from: number,\n    to: number\n  ): void {\n    const cutOut: ITimetableStationDto = arr.splice(from, 1)[0];\n    arr.splice(to, 0, cutOut);\n\n    this.setState({\n      stations: arr,\n    });\n\n    const data: Array<ISortOrderDto> = [];\n    for (let i: number = 0; i < arr.length; i++) {\n      data.push({\n        id: arr[i].id,\n        sortNo: i,\n      });\n    }\n\n    clearTimeout(this.timer);\n    this.timer = setTimeout(async () => {\n      await Api.put<void>(\n        \"/v1/smartmirror/admin/timetable/stations/reorder\",\n        data\n      );\n    }, 500);\n  }\n\n  private async loadData(): Promise<void> {\n    const res: Array<ITimetableStationDto> = await Api.get<\n      Array<ITimetableStationDto>\n    >(\"/v1/smartmirror/admin/timetable/stations\");\n\n    this.setState({\n      stations: res.sort(\n        (a: ITimetableStationDto, b: ITimetableStationDto) =>\n          a.sortNo - b.sortNo\n      ),\n    });\n  }\n}\n\nexport default StationList;\n","import React from \"react\";\nimport Api from \"../../../utils/api\";\nimport Card from \"../../common/Card\";\nimport {\n  ITimetableSettingsDto,\n  ITimetableStationDto,\n} from \"@yellowgarbagebag/rest-api-dto\";\nimport Select from \"react-select\";\n\ninterface IState {\n  dto: ITimetableSettingsDto;\n  stations: Array<ITimetableStationDto>;\n}\n\ninterface IProps {\n  update: number;\n}\n\nclass TimetableSettings extends React.Component<IProps, IState> {\n  private timer: any = null;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      dto: {\n        apiKey: \"\",\n        isActive: false,\n        lines: {\n          showBus: false,\n          showIC: false,\n          showICE: false,\n          showRB: false,\n          showRE: false,\n          showSBahn: false,\n          showTram: false,\n          showUBahn: false,\n        },\n        maxChanges: 3,\n        stationFromId: null,\n        stationToId: null,\n      },\n      stations: [],\n    };\n\n    this.onCheckboxIsActiveChange = this.onCheckboxIsActiveChange.bind(this);\n    this.onTextApiKeyChange = this.onTextApiKeyChange.bind(this);\n    this.onSelectStationFromChange = this.onSelectStationFromChange.bind(this);\n    this.onSelectStationToChange = this.onSelectStationToChange.bind(this);\n\n    this.onCheckboxICEChange = this.onCheckboxICEChange.bind(this);\n    this.onCheckboxICChange = this.onCheckboxICChange.bind(this);\n    this.onCheckboxREChange = this.onCheckboxREChange.bind(this);\n    this.onCheckboxRBChange = this.onCheckboxRBChange.bind(this);\n    this.onCheckboxSBahnChange = this.onCheckboxSBahnChange.bind(this);\n    this.onCheckboxBusChange = this.onCheckboxBusChange.bind(this);\n    this.onCheckboxTramChange = this.onCheckboxTramChange.bind(this);\n    this.onCheckboxUBahnChange = this.onCheckboxUBahnChange.bind(this);\n  }\n\n  public async componentDidMount(): Promise<void> {\n    await this.loadData();\n  }\n\n  public async componentDidUpdate(prevProps: IProps): Promise<void> {\n    if (prevProps.update !== this.props.update) {\n      await this.loadData();\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <Card title=\"Einstellungen\">\n        <form>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Widget aktiv</label>\n            <div className=\"col-sm-8\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={this.state.dto.isActive}\n                  onChange={this.onCheckboxIsActiveChange}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">API-Key</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                disabled={!this.state.dto.isActive}\n                value={this.state.dto.apiKey}\n                onChange={this.onTextApiKeyChange}\n              />\n              <div className=\"text-right\">\n                <a\n                  href=\"https://opendata.rmv.de/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  API-Key beantragen\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Von</label>\n            <div className=\"col-sm-8\">\n              <Select\n                isDisabled={!this.state.dto.isActive}\n                options={this.state.stations}\n                onChange={this.onSelectStationFromChange}\n                value={this.state.stations.filter(\n                  (station: ITimetableStationDto): boolean =>\n                    station.id === this.state.dto.stationFromId\n                )}\n                getOptionLabel={(option: ITimetableStationDto): string =>\n                  option.name\n                }\n                getOptionValue={(option: ITimetableStationDto): string =>\n                  option.id\n                }\n                placeholder={\"Bitte auswählen...\"}\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Nach</label>\n            <div className=\"col-sm-8\">\n              <Select\n                isDisabled={!this.state.dto.isActive}\n                options={this.state.stations}\n                onChange={this.onSelectStationToChange}\n                value={this.state.stations.filter(\n                  (station: ITimetableStationDto): boolean =>\n                    station.id === this.state.dto.stationToId\n                )}\n                getOptionLabel={(option: ITimetableStationDto): string =>\n                  option.name\n                }\n                getOptionValue={(option: ITimetableStationDto): string =>\n                  option.id\n                }\n                placeholder={\"Bitte auswählen...\"}\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Verkehrsmittel</label>\n            <div className=\"col-sm-8\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  disabled={!this.state.dto.isActive}\n                  checked={this.state.dto.lines.showICE}\n                  onChange={this.onCheckboxICEChange}\n                />\n                <label className=\"form-check-label\">ICE</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  disabled={!this.state.dto.isActive}\n                  checked={this.state.dto.lines.showIC}\n                  onChange={this.onCheckboxICChange}\n                />\n                <label className=\"form-check-label\">IC</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  disabled={!this.state.dto.isActive}\n                  checked={this.state.dto.lines.showRE}\n                  onChange={this.onCheckboxREChange}\n                />\n                <label className=\"form-check-label\">RE</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  disabled={!this.state.dto.isActive}\n                  checked={this.state.dto.lines.showRB}\n                  onChange={this.onCheckboxRBChange}\n                />\n                <label className=\"form-check-label\">RB</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  disabled={!this.state.dto.isActive}\n                  checked={this.state.dto.lines.showUBahn}\n                  onChange={this.onCheckboxUBahnChange}\n                />\n                <label className=\"form-check-label\">U-Bahn</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  disabled={!this.state.dto.isActive}\n                  checked={this.state.dto.lines.showSBahn}\n                  onChange={this.onCheckboxSBahnChange}\n                />\n                <label className=\"form-check-label\">S-Bahn</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  disabled={!this.state.dto.isActive}\n                  checked={this.state.dto.lines.showTram}\n                  onChange={this.onCheckboxTramChange}\n                />\n                <label className=\"form-check-label\">Tram</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  disabled={!this.state.dto.isActive}\n                  checked={this.state.dto.lines.showBus}\n                  onChange={this.onCheckboxBusChange}\n                />\n                <label className=\"form-check-label\">Bus</label>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Card>\n    );\n  }\n\n  private onCheckboxTramChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          lines: {\n            ...this.state.dto.lines,\n            showTram: e.currentTarget.checked,\n          },\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxICEChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          lines: {\n            ...this.state.dto.lines,\n            showICE: e.currentTarget.checked,\n          },\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxICChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          lines: {\n            ...this.state.dto.lines,\n            showIC: e.currentTarget.checked,\n          },\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxSBahnChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          lines: {\n            ...this.state.dto.lines,\n            showSBahn: e.currentTarget.checked,\n          },\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxUBahnChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          lines: {\n            ...this.state.dto.lines,\n            showUBahn: e.currentTarget.checked,\n          },\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxRBChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          lines: {\n            ...this.state.dto.lines,\n            showRB: e.currentTarget.checked,\n          },\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxREChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          lines: {\n            ...this.state.dto.lines,\n            showRE: e.currentTarget.checked,\n          },\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxBusChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          lines: {\n            ...this.state.dto.lines,\n            showBus: e.currentTarget.checked,\n          },\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onSelectStationFromChange(value: any): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          stationFromId: value.id,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onSelectStationToChange(value: any): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          stationToId: value.id,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxIsActiveChange(\n    e: React.ChangeEvent<HTMLInputElement>\n  ): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          isActive: e.currentTarget.checked,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onTextApiKeyChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          apiKey: e.currentTarget.value,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private saveValues(): void {\n    clearTimeout(this.timer);\n    this.timer = setTimeout(async () => {\n      await Api.put<ITimetableSettingsDto>(\n        \"/v1/smartmirror/admin/timetable/settings\",\n        this.state.dto\n      );\n    }, 333);\n  }\n\n  private async loadData(): Promise<void> {\n    const stations: Array<ITimetableStationDto> = await Api.get<\n      Array<ITimetableStationDto>\n    >(\"/v1/smartmirror/admin/timetable/stations\");\n    const dto: ITimetableSettingsDto = await Api.get<ITimetableSettingsDto>(\n      \"/v1/smartmirror/admin/timetable/settings\"\n    );\n    this.setState({\n      dto,\n      stations: stations.sort(\n        (a: ITimetableStationDto, b: ITimetableStationDto): number =>\n          a.sortNo - b.sortNo\n      ),\n    });\n  }\n}\n\nexport default TimetableSettings;\n","import React from 'react'\nimport StationSearch from './StationSearch'\nimport StationList from './StationList'\nimport TimetableSettings from './TimetableSettings'\n\ninterface IState {\n  updateList: number\n  updateSettings: number\n}\n\ninterface IProps { }\n\nclass TimetableArea extends React.Component<IProps, IState>  {\n  constructor (props: IProps) {\n    super(props)\n    this.state = {\n      updateList: 0,\n      updateSettings: 0\n    }\n\n    this.onStationAdded = this.onStationAdded.bind(this)\n    this.onStationChanged = this.onStationChanged.bind(this)\n  }\n\n  public render (): JSX.Element {\n    return (\n      <div className='content'>\n        <TimetableSettings update={this.state.updateSettings} />\n        <StationList update={this.state.updateList} onStationChanged={this.onStationChanged} />\n        <StationSearch onStationAdded={this.onStationAdded} />\n      </div>\n    )\n  }\n\n  private onStationAdded (): void {\n    this.setState({\n      updateList: new Date().valueOf(),\n      updateSettings: new Date().valueOf()\n    })\n  }\n\n  private onStationChanged (): void {\n    this.setState({\n      updateSettings: new Date().valueOf()\n    })\n  }\n}\n\nexport default TimetableArea\n","import React from \"react\";\nimport Api from \"../../../utils/api\";\nimport Card from \"../../common/Card\";\nimport {\n  ITrafficSettingsDto,\n  ICommonLocationDto,\n} from \"@yellowgarbagebag/rest-api-dto\";\nimport Select from \"react-select\";\n\ninterface IState {\n  dto: ITrafficSettingsDto;\n  locations: Array<ICommonLocationDto>;\n}\n\ninterface IProps {}\n\nclass Settings extends React.Component<IProps, IState> {\n  private timer: any = null;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      dto: {\n        apiKey: \"\",\n        isActive: false,\n        locationFromId: \"\",\n        locationToId: \"\",\n      },\n      locations: [],\n    };\n\n    this.onCheckboxIsActiveChange = this.onCheckboxIsActiveChange.bind(this);\n    this.onTextApiKeyChange = this.onTextApiKeyChange.bind(this);\n    this.onSelectLocationFromChange = this.onSelectLocationFromChange.bind(\n      this\n    );\n    this.onSelectLocationToChange = this.onSelectLocationToChange.bind(this);\n  }\n\n  public async componentDidMount(): Promise<void> {\n    const dto: ITrafficSettingsDto = await Api.get<ITrafficSettingsDto>(\n      \"/v1/smartmirror/admin/traffic/settings\"\n    );\n    const locations: Array<ICommonLocationDto> = await Api.get<\n      Array<ICommonLocationDto>\n    >(\"/v1/smartmirror/admin/common/locations\");\n\n    this.setState({\n      dto,\n      locations: locations.sort(\n        (a: ICommonLocationDto, b: ICommonLocationDto): number =>\n          a.sortNo - b.sortNo\n      ),\n    });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <Card title=\"Einstellungen\">\n        <form>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Widget aktiv</label>\n            <div className=\"col-sm-8\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={this.state.dto.isActive}\n                  onChange={this.onCheckboxIsActiveChange}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">API-Key</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                disabled={!this.state.dto.isActive}\n                value={this.state.dto.apiKey}\n                onChange={this.onTextApiKeyChange}\n              />\n              <div className=\"text-right\">\n                <a\n                  href=\"https://developer.here.com/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  API-Key beantragen\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Von</label>\n            <div className=\"col-sm-8\">\n              <Select\n                isDisabled={!this.state.dto.isActive}\n                options={this.state.locations}\n                onChange={this.onSelectLocationFromChange}\n                value={this.state.locations.filter(\n                  (location: ICommonLocationDto): boolean =>\n                    location.id === this.state.dto.locationFromId\n                )}\n                getOptionLabel={(option: ICommonLocationDto): string =>\n                  option.name\n                }\n                getOptionValue={(option: ICommonLocationDto): string =>\n                  option.id\n                }\n                placeholder={\"Bitte auswählen...\"}\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Nach</label>\n            <div className=\"col-sm-8\">\n              <Select\n                isDisabled={!this.state.dto.isActive}\n                options={this.state.locations}\n                onChange={this.onSelectLocationToChange}\n                value={this.state.locations.filter(\n                  (location: ICommonLocationDto): boolean =>\n                    location.id === this.state.dto.locationToId\n                )}\n                getOptionLabel={(option: ICommonLocationDto): string =>\n                  option.name\n                }\n                getOptionValue={(option: ICommonLocationDto): string =>\n                  option.id\n                }\n                placeholder={\"Bitte auswählen...\"}\n              />\n            </div>\n          </div>\n        </form>\n      </Card>\n    );\n  }\n\n  private onSelectLocationFromChange(value: any): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          locationFromId: value.id,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onSelectLocationToChange(value: any): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          locationToId: value.id,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxIsActiveChange(\n    e: React.ChangeEvent<HTMLInputElement>\n  ): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          isActive: e.currentTarget.checked,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onTextApiKeyChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          apiKey: e.currentTarget.value,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private saveValues(): void {\n    clearTimeout(this.timer);\n    this.timer = setTimeout(async () => {\n      await Api.put<ITrafficSettingsDto>(\n        \"/v1/smartmirror/admin/traffic/settings\",\n        this.state.dto\n      );\n    }, 333);\n  }\n}\n\nexport default Settings;\n","import React from 'react'\nimport Settings from './Settings'\n\ninterface IState { }\n\ninterface IProps { }\n\nclass TrafficArea extends React.Component<IProps, IState>  {\n  public render (): JSX.Element {\n    return (\n      <div className='content'>\n        <Settings />\n      </div>\n    )\n  }\n}\n\nexport default TrafficArea\n","import React from \"react\";\nimport Api from \"../../../utils/api\";\nimport Card from \"../../common/Card\";\nimport {\n  IWeatherSettingsDto,\n  ICommonLocationDto,\n} from \"@yellowgarbagebag/rest-api-dto\";\nimport Select from \"react-select\";\n\ninterface IState {\n  dto: IWeatherSettingsDto;\n  locations: Array<ICommonLocationDto>;\n}\n\ninterface IProps {}\n\nclass Settings extends React.Component<IProps, IState> {\n  private timer: any = null;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      dto: {\n        apiKey: \"\",\n        isActive: false,\n        locationId: \"\",\n      },\n      locations: [],\n    };\n\n    this.onCheckboxIsActiveChange = this.onCheckboxIsActiveChange.bind(this);\n    this.onTextApiKeyChange = this.onTextApiKeyChange.bind(this);\n    this.onSelectLocationChange = this.onSelectLocationChange.bind(this);\n  }\n\n  public async componentDidMount(): Promise<void> {\n    const dto: IWeatherSettingsDto = await Api.get<IWeatherSettingsDto>(\n      \"/v1/smartmirror/admin/weather/settings\"\n    );\n    const locations: Array<ICommonLocationDto> = await Api.get<\n      Array<ICommonLocationDto>\n    >(\"/v1/smartmirror/admin/common/locations\");\n\n    this.setState({\n      dto,\n      locations: locations.sort(\n        (a: ICommonLocationDto, b: ICommonLocationDto): number =>\n          a.sortNo - b.sortNo\n      ),\n    });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <Card title=\"Einstellungen\">\n        <form>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Widget aktiv</label>\n            <div className=\"col-sm-8\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={this.state.dto.isActive}\n                  onChange={this.onCheckboxIsActiveChange}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">API-Key</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                disabled={!this.state.dto.isActive}\n                value={this.state.dto.apiKey}\n                onChange={this.onTextApiKeyChange}\n              />\n              <div className=\"text-right\">\n                <a\n                  href=\"https://openweathermap.org/appid/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  API-Key beantragen\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\">Ort</label>\n            <div className=\"col-sm-8\">\n              <Select\n                isDisabled={!this.state.dto.isActive}\n                options={this.state.locations}\n                onChange={this.onSelectLocationChange}\n                value={this.state.locations.filter(\n                  (location: ICommonLocationDto): boolean =>\n                    location.id === this.state.dto.locationId\n                )}\n                getOptionLabel={(option: ICommonLocationDto): string =>\n                  option.name\n                }\n                getOptionValue={(option: ICommonLocationDto): string =>\n                  option.id\n                }\n                placeholder={\"Bitte auswählen...\"}\n              />\n            </div>\n          </div>\n        </form>\n      </Card>\n    );\n  }\n\n  private onSelectLocationChange(value: any): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          locationId: value.id,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onCheckboxIsActiveChange(\n    e: React.ChangeEvent<HTMLInputElement>\n  ): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          isActive: e.currentTarget.checked,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private onTextApiKeyChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState(\n      {\n        dto: {\n          ...this.state.dto,\n          apiKey: e.currentTarget.value,\n        },\n      },\n      this.saveValues\n    );\n  }\n\n  private saveValues(): void {\n    clearTimeout(this.timer);\n    this.timer = setTimeout(async () => {\n      await Api.put<IWeatherSettingsDto>(\n        \"/v1/smartmirror/admin/weather/settings\",\n        this.state.dto\n      );\n    }, 333);\n  }\n}\n\nexport default Settings;\n","import React from 'react'\nimport Settings from './Settings'\n\ninterface IState { }\n\ninterface IProps { }\n\nclass WeatherArea extends React.Component<IProps, IState>  {\n  public render (): JSX.Element {\n    return (\n      <div className='content'>\n        <Settings />\n      </div>\n    )\n  }\n}\n\nexport default WeatherArea\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  RouteComponentProps,\n  NavLink,\n  Redirect,\n} from \"react-router-dom\";\nimport CommonArea from \"./common/CommonArea\";\nimport DateArea from \"./date/DateArea\";\nimport FuelPriceArea from \"./fuelPrice/FuelPriceArea\";\nimport TimetableArea from \"./timetable/TimetableArea\";\nimport TrafficArea from \"./traffic/TrafficArea\";\nimport WeatherArea from \"./weather/WeatherArea\";\nimport \"./AdminArea.css\";\n\ninterface IState {\n  collapsed: boolean;\n}\n\ninterface IProps extends RouteComponentProps<MatchParams> {}\n\ninterface MatchParams {}\n\nclass AdminArea extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      collapsed: true,\n    };\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n  }\n\n  public render(): JSX.Element {\n    const collapsed: boolean = this.state.collapsed;\n    const classOne: string = collapsed\n      ? \"collapse navbar-collapse\"\n      : \"collapse navbar-collapse show\";\n    const classTwo: string = collapsed\n      ? \"navbar-toggler navbar-toggler-right collapsed\"\n      : \"navbar-toggler navbar-toggler-right\";\n\n    return (\n      <div className=\"adminarea\">\n        <Router>\n          <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\n            <button\n              type=\"button\"\n              onClick={this.toggleNavbar}\n              className={`${classTwo}`}\n              data-toggle=\"collapse\"\n              data-target=\"#navbarResponsive\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <img width=\"40\" height=\"40\" alt=\"Smart Mirror\" />\n            <div className={`${classOne}`} id=\"navbarResponsive\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                  <NavLink\n                    to=\"/admin/common\"\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.toggleNavbar}\n                  >\n                    Allgemein\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    to=\"/admin/date\"\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.toggleNavbar}\n                  >\n                    Datum\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    to=\"/admin/fuelPrice\"\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.toggleNavbar}\n                  >\n                    Kraftstoffpreise\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    to=\"/admin/timetable\"\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.toggleNavbar}\n                  >\n                    Fahrplan\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    to=\"/admin/traffic\"\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.toggleNavbar}\n                  >\n                    Verkehr\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    to=\"/admin/weather\"\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.toggleNavbar}\n                  >\n                    Wetter\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n          </nav>\n\n          <Switch>\n            <Route path=\"/admin/common\" component={CommonArea} />\n            <Route path=\"/admin/date\" component={DateArea} />\n            <Route path=\"/admin/fuelPrice\" component={FuelPriceArea} />\n            <Route path=\"/admin/timetable\" component={TimetableArea} />\n            <Route path=\"/admin/traffic\" component={TrafficArea} />\n            <Route path=\"/admin/weather\" component={WeatherArea} />\n            <Route path=\"/admin\">\n              <Redirect to=\"/admin/common\" />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n\n  private toggleNavbar(): void {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  }\n}\n\nexport default AdminArea;\n","import React from 'react'\nimport './Widget.css'\n\ninterface IState {\n}\n\ninterface IProps {\n  title: string\n  footer?: string\n  width: number\n}\n\nclass Widget extends React.Component<IProps, IState>  {\n  public render (): JSX.Element {\n    return (\n      <div className='card text-white border-light bg-dark widget' style={{ width: this.props.width }}>\n        <div className='card-header'>\n          {this.props.title}\n        </div>\n        <div className='card-body'>\n          {this.props.children}\n        </div>\n        {this.props.footer &&\n          <div className='card-footer text-right'>\n            Stand: {this.props.footer} Uhr\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default Widget\n","import React from \"react\";\nimport { ICarRoutesDto, ICarRouteDto } from \"@yellowgarbagebag/rest-api-dto\";\nimport Api from \"../../utils/api\";\nimport moment from \"moment\";\nimport Widget from \"../common/Widget\";\n\ninterface IState {\n  dto: ICarRoutesDto;\n  lastUpdate: string;\n}\n\ninterface IProps {\n  refreshRate: number;\n}\n\nclass TrafficWidget extends React.Component<IProps, IState> {\n  private interval?: NodeJS.Timeout;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      dto: {\n        routes: [],\n        text: \"\",\n      },\n      lastUpdate: \"\",\n    };\n  }\n\n  public componentDidMount(): void {\n    this.loadData();\n    this.interval = setInterval(() => this.loadData(), this.props.refreshRate);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <Widget\n        title={this.state.dto.text}\n        footer={this.state.lastUpdate}\n        width={400}\n      >\n        <table className=\"table table-borderless table-sm\">\n          <thead>\n            <tr>\n              <th>Straßen</th>\n              <th className=\"text-center\" style={{ width: \"75px\" }}>\n                Fahrzeit\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.dto.routes\n              .sort(\n                (a: ICarRouteDto, b: ICarRouteDto): number =>\n                  a.expectedTime - b.expectedTime\n              )\n              .map((route: ICarRouteDto) => (\n                <tr key={route.text}>\n                  <td className=\"tdtext\">{route.streetTypes.join(\", \")}</td>\n                  <td className=\"text-center\">\n                    {this.formatTime(route.expectedTime)}\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </Widget>\n    );\n  }\n\n  private formatTime(value: number): string {\n    const date: Date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setSeconds(value);\n\n    const hours: number = date.getHours();\n    const minutes: number = date.getMinutes();\n\n    const hoursStr: string = hours < 10 ? `0${hours}` : `${hours}`;\n    const minutesStr: string = minutes < 10 ? `0${minutes}` : `${minutes}`;\n\n    return `${hoursStr}:${minutesStr}`;\n  }\n\n  private async loadData(): Promise<void> {\n    const dto: ICarRoutesDto = await Api.get<ICarRoutesDto>(\n      \"/v1/smartmirror/ui/traffic\"\n    );\n    this.setState({\n      dto,\n      lastUpdate: moment().format(\"HH:mm:ss\"),\n    });\n  }\n}\n\nexport default TrafficWidget;\n","import React from 'react'\nimport Api from '../../utils/api'\nimport moment from 'moment'\nimport Widget from '../common/Widget'\n\ninterface IState {\n  pattern: string,\n  value: string\n}\n\ninterface IProps {\n  refreshRate: number\n  fontSize: number\n}\n\nclass DateWidget extends React.Component<IProps, IState>  {\n  private interval?: NodeJS.Timeout\n\n  constructor (props: IProps) {\n    super(props)\n    this.state = {\n      pattern: '',\n      value: ''\n    }\n  }\n\n  public async componentDidMount (): Promise<void> {\n    await this.loadData()\n  }\n\n  public componentWillUnmount (): void {\n    if (this.interval) {\n      clearInterval(this.interval)\n    }\n  }\n\n  public render (): JSX.Element {\n    return (\n      <Widget title='Datum' width={400}>\n        <div className='text-center' style={{ fontSize: this.props.fontSize }}>\n          {this.state.value}\n        </div>\n      </Widget>\n    )\n  }\n\n  private async loadData (): Promise<void> {\n    const pattern: string = await Api.get<string>('/v1/smartmirror/ui/date')\n    this.setState({\n      pattern\n    }, this.refresh)\n  }\n\n  private refresh (): void {\n    this.interval = setInterval(() => this.setState({ value: moment().format(this.state.pattern) }), this.props.refreshRate)\n  }\n}\n\nexport default DateWidget\n","import React from \"react\";\nimport { IFuelPricePricesDto } from \"@yellowgarbagebag/rest-api-dto\";\nimport Api from \"../../utils/api\";\nimport moment from \"moment\";\nimport Widget from \"../common/Widget\";\n\ninterface IState {\n  dto: Array<IFuelPricePricesDto>;\n  lastUpdate: string;\n}\n\ninterface IProps {\n  refreshRate: number;\n  showE5: boolean;\n  showE10: boolean;\n  showDiesel: boolean;\n}\n\nclass FuelPriceWidget extends React.Component<IProps, IState> {\n  private interval?: NodeJS.Timeout;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      dto: [],\n      lastUpdate: \"\",\n    };\n  }\n\n  public componentDidMount(): void {\n    this.loadData();\n    this.interval = setInterval(() => this.loadData(), this.props.refreshRate);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  public render(): JSX.Element {\n    // ToDo: Beachten, dass die Tankstelle auch geschlossen sein kann\n\n    return (\n      <Widget\n        title=\"Kraftstoffpreise\"\n        footer={this.state.lastUpdate}\n        width={400}\n      >\n        <table className=\"table table-borderless table-sm\">\n          <thead>\n            <tr>\n              <th>Tankstelle</th>\n              {this.props.showE5 && (\n                <th className=\"text-center\" style={{ width: \"50px\" }}>\n                  E5\n                </th>\n              )}\n              {this.props.showE10 && (\n                <th className=\"text-center\" style={{ width: \"50px\" }}>\n                  E10\n                </th>\n              )}\n              {this.props.showDiesel && (\n                <th className=\"text-center\" style={{ width: \"60px\" }}>\n                  Diesel\n                </th>\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.dto.map((station: IFuelPricePricesDto) => (\n              <tr key={station.sortNo}>\n                <td className=\"tdtext\">{station.name}</td>\n                {this.props.showE5 && (\n                  <td className=\"text-center align-middle\">\n                    {this.formatPrice(station.e5)}\n                  </td>\n                )}\n                {this.props.showE10 && (\n                  <td className=\"text-center align-middle\">\n                    {this.formatPrice(station.e10)}\n                  </td>\n                )}\n                {this.props.showDiesel && (\n                  <td className=\"text-center align-middle\">\n                    {this.formatPrice(station.diesel)}\n                  </td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Widget>\n    );\n  }\n\n  private formatPrice(price: number | false): JSX.Element {\n    if (!price) {\n      return <div>-,---</div>;\n    }\n\n    const priceStr: string = price.toString().replace(\".\", \",\");\n    const part0: string = priceStr.substr(0, priceStr.length - 1);\n    const part1: string = priceStr[priceStr.length - 1];\n\n    return (\n      <div>\n        {part0}\n        <sup>{part1}</sup>\n      </div>\n    );\n  }\n\n  private async loadData(): Promise<void> {\n    const dto: Array<IFuelPricePricesDto> = await Api.get<\n      Array<IFuelPricePricesDto>\n    >(\"/v1/smartmirror/ui/fuelprice\");\n    this.setState({\n      dto: dto.sort(\n        (a: IFuelPricePricesDto, b: IFuelPricePricesDto): number =>\n          a.sortNo - b.sortNo\n      ),\n      lastUpdate: moment().format(\"HH:mm:ss\"),\n    });\n  }\n}\n\nexport default FuelPriceWidget;\n","import React from \"react\";\nimport { IRmvTripsDto, IRmvTripDto } from \"@yellowgarbagebag/rest-api-dto\";\nimport Api from \"../../utils/api\";\nimport moment from \"moment\";\nimport Widget from \"../common/Widget\";\n\ninterface IState {\n  dto: IRmvTripsDto;\n  lastUpdate: string;\n}\n\ninterface IProps {\n  refreshRate: number;\n}\n\nclass TimetableWidget extends React.Component<IProps, IState> {\n  private interval?: NodeJS.Timeout;\n  private readonly okDelaySec: number = 180;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      dto: {\n        text: \"\",\n        trips: [],\n      },\n      lastUpdate: \"\",\n    };\n  }\n\n  public componentDidMount(): void {\n    this.loadData();\n    this.interval = setInterval(() => this.loadData(), this.props.refreshRate);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <Widget\n        title={this.state.dto.text}\n        footer={this.state.lastUpdate}\n        width={400}\n      >\n        <table className=\"table table-borderless table-sm\">\n          <thead>\n            <tr>\n              <th className=\"text-center\">Abfahrt</th>\n              <th className=\"text-center\">Ankunft</th>\n              <th className=\"text-center\">Dauer</th>\n              <th className=\"text-center\">Gleis</th>\n              <th className=\"text-center\">Linie</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.dto.trips.map((trip: IRmvTripDto) => (\n              <tr key={trip.tripId}>\n                <td className=\"text-center\">\n                  {this.formatTime(trip.startTimePlanned)}\n                  <br />\n                  <div\n                    className={\n                      trip.startTimeReal >\n                      trip.startTimePlanned + this.okDelaySec\n                        ? \"text-danger\"\n                        : \"text-success\"\n                    }\n                  >\n                    {this.formatTime(trip.startTimeReal)}\n                  </div>\n                </td>\n                <td className=\"text-center\">\n                  {this.formatTime(trip.arrivalTimePlanned)}\n                  <br />\n                  <div\n                    className={\n                      trip.arrivalTimeReal >\n                      trip.arrivalTimePlanned + this.okDelaySec\n                        ? \"text-danger\"\n                        : \"text-success\"\n                    }\n                  >\n                    {this.formatTime(trip.arrivalTimeReal)}\n                  </div>\n                </td>\n                <td className=\"text-center\">\n                  {this.formatTime(trip.durationPlanned)}\n                  <br />\n                  <div\n                    className={\n                      trip.durationReal > trip.durationPlanned + this.okDelaySec\n                        ? \"text-danger\"\n                        : \"text-success\"\n                    }\n                  >\n                    {this.formatTime(trip.durationReal)}\n                  </div>\n                </td>\n                <td className=\"text-center\">\n                  {trip.trackPlanned}\n                  <br />\n                  <div\n                    className={\n                      trip.trackPlanned !== trip.trackReal\n                        ? \"text-danger\"\n                        : \"text-success\"\n                    }\n                  >\n                    {trip.trackReal}\n                  </div>\n                </td>\n                <td className=\"text-center\">{trip.lines.join(\", \")}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Widget>\n    );\n  }\n\n  private formatTime(value: number): string {\n    return moment.utc(value * 1000).format(\"HH:mm\");\n  }\n\n  private async loadData(): Promise<void> {\n    const dto: IRmvTripsDto = await Api.get<IRmvTripsDto>(\n      \"/v1/smartmirror/ui/timetable\"\n    );\n    this.setState({\n      dto,\n      lastUpdate: moment().format(\"HH:mm:ss\"),\n    });\n  }\n}\n\nexport default TimetableWidget;\n","import React from \"react\";\nimport {\n  IWeatherDatasDto,\n  IWeatherDataDto,\n} from \"@yellowgarbagebag/rest-api-dto\";\nimport Api from \"../../utils/api\";\nimport moment from \"moment\";\nimport Widget from \"../common/Widget\";\n\ninterface IState {\n  dto: IWeatherDatasDto;\n  lastUpdate: string;\n}\n\ninterface IProps {\n  refreshRate: number;\n}\n\nclass WeatherWidget extends React.Component<IProps, IState> {\n  private interval?: NodeJS.Timeout;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      dto: {\n        infos: [],\n        name: \"\",\n      },\n      lastUpdate: \"\",\n    };\n  }\n\n  public componentDidMount(): void {\n    this.loadData();\n    this.interval = setInterval(() => this.loadData(), this.props.refreshRate);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <Widget\n        title={this.state.dto.name}\n        footer={this.state.lastUpdate}\n        width={400}\n      >\n        <div className=\"container\">\n          <div className=\"row\">\n            {this.state.dto.infos.map((info: IWeatherDataDto) => (\n              <div\n                key={info.timestamp}\n                className=\"col-sm weatherEntry text-center\"\n              >\n                {moment(info.timestamp * 1000).format(\"HH:mm\")} Uhr\n                <br />\n                <img src={`weathericons/${info.icon}.png`} alt=\"\" />\n                <br />\n                {Math.round(info.temperature)}&deg; /{\" \"}\n                {Math.round(info.temperatureFeelsLike)}&deg;\n                <br />\n                {info.conditionText}\n              </div>\n            ))}\n          </div>\n        </div>\n      </Widget>\n    );\n  }\n\n  private async loadData(): Promise<void> {\n    const dto: IWeatherDatasDto = await Api.get<IWeatherDatasDto>(\n      \"/v1/smartmirror/ui/weather\"\n    );\n    this.setState({\n      dto,\n      lastUpdate: moment().format(\"HH:mm:ss\"),\n    });\n  }\n}\n\nexport default WeatherWidget;\n","import React from \"react\";\nimport TrafficWidget from \"./TrafficWidget\";\nimport \"./UiArea.css\";\nimport DateWidget from \"./DateWidget\";\nimport FuelPriceWidget from \"./FuelPriceWidget\";\nimport TimetableWidget from \"./TimetableWidget\";\nimport { IUiSettingsDto } from \"@yellowgarbagebag/rest-api-dto\";\nimport Api from \"../../utils/api\";\nimport WeatherWidget from \"./WeatherWidget\";\n\ninterface IState {\n  dto: IUiSettingsDto;\n}\n\ninterface IProps {}\n\nclass UiArea extends React.Component<IProps, IState> {\n  private interval?: NodeJS.Timeout;\n  private readonly refreshRate: number = 2 * 60 * 1000; // 2 minutes\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      dto: {\n        date: {\n          fontSize: 12,\n          isActive: false,\n        },\n        fuelPrice: {\n          interval: 15 * 3600,\n          isActive: false,\n          showDiesel: false,\n          showE10: false,\n          showE5: false,\n        },\n        timetable: {\n          isActive: false,\n        },\n        traffic: {\n          isActive: false,\n        },\n        weather: {\n          isActive: false,\n        },\n      },\n    };\n  }\n\n  public componentDidMount(): void {\n    this.loadData();\n    this.interval = setInterval(() => this.loadData(), this.refreshRate);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  public render(): JSX.Element {\n    // Hacky background color\n    document.body.style.backgroundColor = \"black\";\n    document.body.style.lineHeight = \"unset\";\n\n    return (\n      <div>\n        <div className=\"float-lg-left\">\n          {this.state.dto.weather.isActive && (\n            <WeatherWidget refreshRate={2 * 60 * 1000} />\n          )}\n          {this.state.dto.traffic.isActive && (\n            <TrafficWidget refreshRate={2 * 60 * 1000} />\n          )}\n          {this.state.dto.fuelPrice.isActive && (\n            <FuelPriceWidget\n              refreshRate={this.state.dto.fuelPrice.interval * 1000}\n              showDiesel={this.state.dto.fuelPrice.showDiesel}\n              showE10={this.state.dto.fuelPrice.showE10}\n              showE5={this.state.dto.fuelPrice.showE5}\n            />\n          )}\n        </div>\n        <div className=\"float-lg-right\">\n          {this.state.dto.date.isActive && (\n            <DateWidget\n              refreshRate={1 * 1000}\n              fontSize={this.state.dto.date.fontSize}\n            />\n          )}\n          {this.state.dto.timetable.isActive && (\n            <TimetableWidget refreshRate={2 * 60 * 1000} />\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  private async loadData(): Promise<void> {\n    const dto: IUiSettingsDto = await Api.get<IUiSettingsDto>(\n      \"/v1/smartmirror/ui/settings\"\n    );\n    this.setState({\n      dto,\n    });\n  }\n}\n\nexport default UiArea;\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport AdminArea from './components/admin/AdminArea'\nimport UiArea from './components/ui/UiArea'\n\nconst App: React.FC = (): JSX.Element => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/admin' component={AdminArea} />\n        <Route path='/' component={UiArea} />\n      </Switch>\n    </Router >\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = (): void => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = (): void => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}