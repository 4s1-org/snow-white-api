// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model CommonLocation {
  id                 String           @id @default(uuid())
  name               String
  nameOrigin         String
  latitude           Float
  longitude          Float
  sortNo             Int
  WeatherSetting     WeatherSetting[]
  TrafficSettingFrom TrafficSetting[] @relation("commonLocationFrom")
  TrafficSettingTo   TrafficSetting[] @relation("commonLocationTo")
}

model CommonSetting {
  id           String @id @default(uuid())
  morningStart Int
  morningEnd   Int
}

model DateSetting {
  id       String  @id @default(uuid())
  isActive Boolean
  pattern  String
  fontSize Int
}

model FuelPriceSetting {
  id         String  @id @default(uuid())
  isActive   Boolean
  apiKey     String
  showE5     Boolean
  showE10    Boolean
  showDiesel Boolean
  interval   Int
}

model FuelPriceStation {
  id         String @id @default(uuid())
  name       String
  nameOrigin String
  latitude   Float
  longitude  Float
  sortNo     Int
  remoteId   String
}

model TimetableSetting {
  id                     String           @id @default(uuid())
  isActive               Boolean
  timetableStationFromId String
  timetableStationFrom   TimetableStation @relation("timetableStationFrom", fields: [timetableStationFromId], references: [id])
  timetableStationToId   String
  timetableStationTo     TimetableStation @relation("timetableStationTo", fields: [timetableStationToId], references: [id])
  maxChanges             Int
  showICE                Boolean
  showIC                 Boolean
  showBus                Boolean
  showTram               Boolean
  showSBahn              Boolean
  showRE                 Boolean
  showRB                 Boolean
  showUBahn              Boolean
}

model TimetableStation {
  id                   String             @id @default(uuid())
  name                 String
  nameOrigin           String
  sortNo               Int
  remoteId             Int
  TimetableSettingFrom TimetableSetting[] @relation("timetableStationFrom")
  TimetableSettingTo   TimetableSetting[] @relation("timetableStationTo")
}

model TrafficSetting {
  id                   String         @id @default(uuid())
  isActive             Boolean
  apiKey               String
  commonLocationFromId String
  commonLocationFrom   CommonLocation @relation("commonLocationFrom", fields: [commonLocationFromId], references: [id])
  commonLocationToId   String
  commonLocationTo     CommonLocation @relation("commonLocationTo", fields: [commonLocationToId], references: [id])
}

model WeatherSetting {
  id               String         @id @default(uuid())
  isActive         Boolean
  apiKey           String
  commonLocationId String
  commonLocation   CommonLocation @relation(fields: [commonLocationId], references: [id])
}
